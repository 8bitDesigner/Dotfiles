# Use ctrl-a for prefix instead of crtl-b
unbind C-b
set-option -g prefix C-a
bind C-a send-prefix

# Create new windows/panes in the same directory
unbind c
bind c new-window -c '#{pane_current_path}'
unbind "\""
bind "\"" split-window -c '#{pane_current_path}'
unbind "\%"
bind "\%" split-window -h -c '#{pane_current_path}'

# Use [prefix]-r to reload config
bind r source-file ~/.tmux.conf

# Use 1 instead of 0 for the first window/pane
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Use mouse to select panes/windows/etc.
set-option -g mouse on

# Remove delay on escape key
set-option -sg escape-time 0

# Act like vim!
set-option -g status-keys vi
set-window-option -g mode-keys vi

set-window-option -g automatic-rename on

# Needed to use shift up/down/left/right in vim
set-window-option -g xterm-keys on

# Rebind Tmux sessions into the right user space
set-option -g default-shell $SHELL
set-option -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Rebind these as un-repeatable keys
unbind        Up
bind-key      Up select-pane -U
unbind      Down
bind-key    Down select-pane -D
unbind      Left
bind-key    Left select-pane -L
unbind     Right
bind-key   Right select-pane -R

# Allow mouse scrolling on a pane to enter/exit copy mode
bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

# Export tmux buffer to OSX pasteboard
bind-key y run-shell "tmux save-buffer - | reattach-to-user-namespace pbcopy\; tmux display 'Buffer copied'"

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

# Shortcut to hop between sessions
bind-key C choose-session

# Amount of time for which status line messages and other indicators
# are displayed. time is in milliseconds.
set -g display-time 5000

# Use solarized colors for status bar
set-window-option -g status-style bg=colour3,fg=colour0,bright
set-window-option -g window-status-style bg=colour3,fg=colour0,dim
set-window-option -g window-status-current-style fg=colour0,bg=colour9,bright
set-window-option -g window-status-bell-style bg=colour1,fg=colour0,bright
set-window-option -g window-status-activity-style bg=colour1,fg=colour0,bright
set-option -g pane-active-border-style fg=colour4
set-window-option -g clock-mode-colour            colour3

# Conditionals
# #{?condition,true,false}
# is last window #{?#{==:#{session_windows},#{window_index}},true,false}"
# is first window #{?#{==:#{session_windows},#{window_index}},true,false}"
# glyphs
#    

set-option -g window-status-separator ''
set-option -g status-left "#[fg=white,bg=red] #{?#S,#S,#{=21:pane_title}} #[fg=default,bg=yello:]"
set-option -g status-left-length 15

set-window-option -g window-status-format         "#{?#{==:#{window_index},1},#[fg=red#,bg=yellow]#[fg=default#,bg=yellow],} #I:#W "
set-window-option -g window-status-current-format "#{?#{==:#{window_index},1},#[fg=red#,bg=brightred]#[fg=white#,bg=brightred],#[fg=yellow#,bg=brightred]#[fg=white#,bg=brightred]} #I:#W #[fg=brightred,bg=yellow]#[fg=default,bg=yellow]"

set-option -g status-right "#[fg=brightred]#[fg=white,bg=brightred]#{?#S, #{=21:pane_title} #[fg=black]#[fg=white],} #{battery_icon_status} #{battery_percentage} #[fg=red,bg=brightred]#[fg=white,bg=red] %H:%M %d-%b-%y"
set-option -g status-right-length 70

run-shell ~/.tmux/tmux-battery/battery.tmux
